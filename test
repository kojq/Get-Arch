#!/bin/sh
set -e

# Set account credentials
read -p "Set the account username: " username
read -s -p "Set the account password: " password
read -s -p "Set the root password: " root_password

# Synchronize the system clock
timedatectl set-ntp true

# Create partitions
parted -s /dev/sda mklabel gpt
parted /dev/sda mkpart ESP fat32 1MiB 513MiB
parted /dev/sda set 1 esp on
parted /dev/sda mkpart ARCH btrfs 513MiB 100%

# Format partitions
mkfs.fat -F32 /dev/sda1
mkfs.btrfs -f /dev/sda2

# Mount the root partition
mount /dev/sda2 /mnt

# Create subvolumes
btrfs su c /mnt/root
btrfs su c /mnt/home
btrfs su c /mnt/snapshots

# Unmount the root partition
umount /mnt

# Mount the root subvolume
mount -o noatime,compress=zstd,subvol=root /dev/sda2 /mnt

# Mount the home subvolume
mkdir /mnt/home
mount -o noatime,compress=zstd,subvol=home /dev/sda2 /mnt/home

# Mount the snapshots subvolume
mkdir /mnt/.snapshots
mount -o noatime,compress=zstd,subvol=snapshots /dev/sda2 /mnt/.snapshots

# Mount the ESP partition
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot

pacstrap -Ki /mnt base base-devel booster cups gdm gnome-console gnome-control-center intel-ucode networkmanager nftables linux linux-firmware reflector sbctl zram-generator

genfstab -U /mnt > /mnt/etc/fstab

arch-chroot /mnt /bin/sh <<EOF

ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime
hwclock -wu

sed -i 's/#\(en_US.UTF-8 UTF-8\)/\1/' /etc/locale.gen
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf

echo arch > /etc/hostname
echo '127.0.0.1 localhost
::1 localhost
127.0.1.1 arch.localdomain arch' > /etc/hosts

sed -i -E 's/^#(Color|VerbosePkgLists)$/\1/' /etc/pacman.conf
sed -i 's/^#\(ParallelDownloads = \)5$/\1'$[`nproc`-1]'/' /etc/pacman.conf

echo export EDITOR=/usr/bin/helix >> /etc/bash.bashrc
touch /etc/udev/rules.d/61-gdm.rules

systemctl enable bluetooth cups.socket gdm NetworkManager nftables reflector.timer systemd-timesyncd
# systemctl enable warp-svc && systemctl enable --user pipewire-pulse.service

useradd -mG wheel $username
echo $username:$password | chpasswd
echo root:$root_password | chpasswd

mkdir /etc/pacman.d/hooks/

echo '[Trigger]
Type = Package
Operation = Upgrade
Target = systemd

[Action]
Description = Gracefully upgrading systemd-boot...
When = PostTransaction
Exec = /usr/bin/systemctl restart systemd-boot-update' > /etc/pacman.d/hooks/95-systemd-boot.hook

mkdir -p /boot/loader/entries/

echo 'title Arch Linux with booster
linux /vmlinuz-linux
initrd /intel-ucode.img
initrd /booster-linux.img
options root=PARTLABEL=ARCH rw' > /boot/loader/entries/booster.conf

bootctl install

EOF

# umount -R /mnt
# reboot

#git clone https://aur.archlinux.org/paru-bin.git
#cd paru-bin
#makepkg -si
#cd ..
#rm -rf paru-bin
#paru -Syu cloudflare-warp-bin gdm-settings

#yes | warp-cli register
#warp-cli set-families-mode malware
#warp-cli connect

# enable Secure Boot
#sbctl create-keys
#sbctl enroll-keys -m
#sbctl sign -s /boot/EFI/BOOT/BOOTX64.EFI
# sbctl sign -s /boot/EFI/systemd/systemd-bootx64.efi
#sbctl sign -s /boot/vmlinuz-linux

# timedatectl zramctl systemctl status /dev/zram0 afterwards
# ROG tools
# pacman-key -r 8F654886F17D497FEFE3DB448B15A6B0E9A3FA35
# pacman-key --lsign-key 8F654886F17D497FEFE3DB448B15A6B0E9A3FA35
# grep g14 /etc/pacman.conf || echo -e '\n[g14]\nServer = https://arch.asus-linux.org' | sudo tee -a /etc/pacman.conf
# pacman -Syu --noconfirm --needed asusctl
# systemctl enable --now power-profiles-daemon
