#!/bin/sh
set -e

# Determine disk to install upon
disk=$(lsblk -do NAME -x SIZE | tail -1)
read -p 'Press enter to use '$disk'; otherwise, state the disk name: ' new_disk
disk=${new_disk:-$disk}
[[ $disk =~ [0-9]$ ]] && convention=p

# Set account credentials
read -p 'Set the account username: ' username
read -sp 'Set the account password: ' password
echo
read -sp 'Set the root password: ' root_password
echo

# Synchronize system clock
timedatectl set-ntp true

# Create partitions
parted -s /dev/$disk mklabel gpt
parted /dev/$disk mkpart ESP fat32 1MiB 513MiB
parted /dev/$disk set 1 esp on
parted /dev/$disk mkpart ARCH btrfs 513MiB 100%

# Format partitions
mkfs.fat -F32 /dev/$disk$convention'1'
mkfs.btrfs -f /dev/$disk$convention'2'

# Mount root partition
mount /dev/$disk$convention'2' /mnt

# Create subvolumes
btrfs su c /mnt/root
btrfs su c /mnt/home
btrfs su c /mnt/snapshots

# Unmount root partition
umount /mnt

# Mount root subvolume
mount -o noatime,compress=zstd,subvol=root /dev/$disk$convention'2' /mnt

# Mount home subvolume
mkdir /mnt/home
mount -o noatime,compress=zstd,subvol=home /dev/$disk$convention'2' /mnt/home

# Mount snapshots subvolume
mkdir /mnt/.snapshots
mount -o noatime,compress=zstd,subvol=snapshots /dev/$disk$convention'2' /mnt/.snapshots

# Mount ESP partition
mkdir /mnt/boot
mount /dev/$disk$convention'1' /mnt/boot

pacstrap -Ki /mnt $(lspci | grep -q NVIDIA && nvidia) amd-ucode aria2 baobab base base-devel booster bottom btrfs-progs cups distrobox eog espeak-ng evince firefox firefox-ublock-origin fprintd fwupd gdm git gnome-backgrounds gnome-calculator gnome-calendar gnome-characters gnome-clocks gnome-console gnome-control-center gnome-disk-utility gnome-font-viewer gnome-keyring gnome-logs gnome-sound-recorder gnome-system-monitor gnome-user-share gnome-weather gvfs gvfs-afc gvfs-goa gvfs-google gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-smb helix hunspell hunspell-en_us hyphen hyphen-en ibus ibus-hangul ibus-kkc ibus-m17n ibus-table-chinese ibus-unikey imagemagick intel-media-driver intel-ucode lapce libmythes libreoffice-fresh libva-mesa-driver linux linux-firmware malcontent mesa mesa-vdpau mpv mythes-en nautilus networkmanager nftables noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra obs-studio orca pipewire pipewire-alsa pipewire-jack pipewire-pulse podman qt6-wayland reflector sbctl simple-scan skim tectonic vulkan-intel vulkan-radeon wireplumber xdg-desktop-portal-gnome xdg-user-dirs-gtk zram-generator

genfstab -U /mnt > /mnt/etc/fstab

arch-chroot /mnt /bin/sh <<EOF

ln -s /usr/share/zoneinfo/America/New_York /etc/localtime
hwclock -wu

sed -i 's/#\(en_US.UTF-8 UTF-8\)/\1/' /etc/locale.gen
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf

echo arch > /etc/hostname
echo '127.0.0.1 localhost
::1 localhost
127.0.1.1 arch.localdomain arch' > /etc/hosts

sed -i -E 's/^#(Color|VerbosePkgLists)$/\1/' /etc/pacman.conf
sed -i 's/^#\(ParallelDownloads = \)5$/\1'$[`nproc`-1]'/' /etc/pacman.conf

echo '
export EDITOR=/usr/bin/helix' >> /etc/bash.bashrc

echo '
GTK_IM_MODULE=ibus
QT_IM_MODULE=ibus
XMODIFIERS=@im=ibus' >> /etc/environment

systemctl enable bluetooth cups.socket gdm NetworkManager nftables reflector.timer systemd-timesyncd

useradd -mG wheel $username
echo $username:$password | chpasswd
echo root:$root_password | chpasswd
echo $username 'ALL=(ALL) ALL' > /etc/sudoers.d/users

mkdir /etc/pacman.d/hooks

echo '[Trigger]
Type = Package
Operation = Upgrade
Target = systemd

[Action]
Description = Gracefully upgrading systemd-boot...
When = PostTransaction
Exec = /usr/bin/systemctl restart systemd-boot-update' > /etc/pacman.d/hooks/95-systemd-boot.hook

mkdir -p /boot/loader/entries

echo 'title Arch Linux
linux /vmlinuz-linux
initrd /amd-ucode.img
initrd /intel-ucode.img
initrd /booster-linux.img
options root=PARTLABEL=ARCH zswap.enabled=0 rootflags=subvol=root rootfstype=btrfs rw' > /boot/loader/entries/arch.conf

bootctl install

echo '[zram0]
zram-size = ram / 2
compression-algorithm = zstd
swap-priority = 100
fs-type = swap' > /etc/systemd/zram-generator.conf
systemctl start systemd-zram-setup@zram0

sbctl create-keys
sbctl enroll-keys -m
sbctl sign -s /boot/EFI/BOOT/BOOTX64.EFI
sbctl sign -s /boot/EFI/systemd/systemd-bootx64.efi
sbctl sign -s /boot/vmlinuz-linux

touch /etc/udev/rules.d/61-gdm.rules

EOF

umount -R /mnt
reboot
