#!/bin/bash
set -e

# Set disk
clear
echo WARNING: Back up data. The entire disk will be wiped.
PS3='Set disk: '
select disk in $(lsblk -do NAME -x SIZE | tac | head -n -2)
do
  if [[ -n $disk ]]; then
    break
  else
    echo Invalid selection. Try again.
  fi
done
[[ $disk =~ [0-9]$ ]] && separator=p

# Set timezone
clear
PS3='Set timezone: '
select timezone in $(timedatectl list-timezones)
do
  if [[ -n $timezone ]]; then
    break
  else
    echo Invalid selection. Try again.
  fi
done

# Set credentials
clear
read -p 'Set username: ' username
read -sp 'Set password: ' password

# Synchronize system clock
timedatectl set-ntp true

# Create partitions
parted -s /dev/$disk \
  mklabel gpt \
  mkpart ESP fat32 1MiB 513MiB \
  set 1 esp on \
  mkpart ARCH btrfs 513MiB 100%

# Format partitions
mkfs.fat -F32 /dev/$disk$separator'1'
mkfs.btrfs -f /dev/$disk$separator'2'

# Mount root partition
mount /dev/$disk$separator'2' /mnt

# Create subvolumes
btrfs su c /mnt/root
btrfs su c /mnt/home
btrfs su c /mnt/snapshots

# Unmount root partition
umount /mnt

# Mount root subvolume
mount -o noatime,compress=zstd,subvol=root /dev/$disk$separator'2' /mnt

# Mount home subvolume
mkdir /mnt/home
mount -o noatime,compress=zstd,subvol=home /dev/$disk$separator'2' /mnt/home

# Mount snapshots subvolume
mkdir /mnt/.snapshots
mount -o noatime,compress=zstd,subvol=snapshots /dev/$disk$separator'2' /mnt/.snapshots

# Mount ESP partition
mkdir /mnt/boot
mount /dev/$disk$separator'1' /mnt/boot

pacstrap -K /mnt amd-ucode mpv aria2 base bluez booster btrfs-progs cups distrobox firefox firefox-ublock-origin fprintd fwupd fzf git helix hunspell hunspell-en_us hyphen hyphen-en hyprland intel-media-driver intel-ucode iwd libmythes libreoffice-fresh libva-mesa-driver linux linux-firmware mesa-vdpau mythes-en nftables noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra pipewire-alsa pipewire-jack pipewire-pulse podman polkit-kde-agent reflector sbctl sddm systemd-resolvconf tectonic vulkan-intel vulkan-radeon wgcf wireguard-tools wireplumber xdg-desktop-portal-hyprland zellij zram-generator bemenu bemenu-wayland j4-dmenu-desktop nemo

genfstab -U /mnt > /mnt/etc/fstab

arch-chroot /mnt <<EOF

# $(lspci | grep -q NVIDIA && echo nvidia)
# obs-studio opendoas qt6-wayland
# waylock swaylock waybar polybar zathura pavucontrol alsa-utils grim slurp vvave nm-applet wezterm brightnessctl bluez-utils blueman kitty bottom fnott mako
# baobab bzip2 openssh krb5 eog espeak-ng orca evince gnome-backgrounds gnome-calculator gnome-calendar gnome-characters gnome-clocks gnome-connections
# gnome-disk-utility gnome-remote-desktop gnome-sound-recorder gnome-system-monitor gnome-user-share gnome-weather gvfs-afc gvfs-goa gvfs-google
# gvfs-gphoto2 gvfs-mtp gvfs-nfs gvfs-smb ibus-hangul ibus-kkc ibus-m17n ibus-table-chinese ibus-unikey lapce nautilus simple-scan xdg-user-dirs-gtk

ln -s /usr/share/zoneinfo/$timezone /etc/localtime
hwclock -wu

sed -i 's/#\(en_US.UTF-8 UTF-8\)/\1/' /etc/locale.gen
locale-gen
echo LANG=en_US.UTF-8 > /etc/locale.conf

echo arch > /etc/hostname

sed -i -E 's/^#(Color|VerbosePkgLists)$/\1/' /etc/pacman.conf
sed -i 's/^#\(ParallelDownloads = \)5$/\1'$[`nproc`-1]'/' /etc/pacman.conf

echo '
export EDITOR=/usr/bin/helix' >> /etc/bash.bashrc

useradd -mG wheel $username
echo $username:$password | chpasswd
echo permit :wheel > /etc/doas.conf
chmod -c 0400 /etc/doas.conf
# echo $username 'ALL=(ALL) ALL' > /etc/sudoers.d/users

echo '[General]
DisplayServer=wayland' > /etc/sddm.conf.d/1-wayland.conf

# This does not work
echo '
exec-once = /usr/lib/polkit-kde-authentication-agent-1' >> ~/.config/hypr/hyprland.conf
# j4-dmenu-desktop --dmenu='bemenu -i --nb "#3f3f3f" --nf "#dcdccc" --fn "pango:DejaVu Sans Mono 12"' --term='termite'

yes | wgcf register
wgcf generate
cp wgcf-profile.conf /etc/wireguard
rm wgcf-account.toml wgcf-profile.conf

systemctl enable bluetooth cups.socket iwd nftables reflector.timer sddm systemd-resolved systemd-timesyncd wg-quick@wgcf-profile

mkdir /etc/pacman.d/hooks

echo '[Trigger]
Type = Package
Operation = Upgrade
Target = systemd

[Action]
Description = Upgrading systemd-boot...
When = PostTransaction
Exec = /usr/bin/systemctl restart systemd-boot-update' > /etc/pacman.d/hooks/1-systemd-boot.hook

echo '[Trigger]
Type = Package
Operation = Install
Operation = Upgrade
Target = *

[Action]
Description = Removing package cache...
When = PostTransaction
Exec = /usr/bin/bash -c "rm /var/cache/pacman/pkg/*"' > /etc/pacman.d/hooks/2-package-cache.hook

mkdir -p /boot/loader/entries

echo 'title Arch Linux
linux /vmlinuz-linux
initrd /amd-ucode.img
initrd /intel-ucode.img
initrd /booster-linux.img
options root=PARTLABEL=ARCH zswap.enabled=0 rootflags=subvol=root rootfstype=btrfs rw' > /boot/loader/entries/arch.conf

bootctl install

echo '[zram0]
zram-size = ram / 2
compression-algorithm = zstd
swap-priority = 100
fs-type = swap' > /etc/systemd/zram-generator.conf

sbctl create-keys
sbctl enroll-keys -m
sbctl sign -s /boot/EFI/BOOT/BOOTX64.EFI
sbctl sign -s /boot/EFI/systemd/systemd-bootx64.efi
sbctl sign -s /boot/vmlinuz-linux

EOF

umount -R /mnt
reboot
